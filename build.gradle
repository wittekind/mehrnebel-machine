buildscript {
    ext.kotlin_version = '1.1.61'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.1'
}

apply plugin: 'kotlin'
apply plugin: 'application'

def versions = [
        vertx  : [
                main   : '3.4.2',
                jackson: '2.7.9'
        ],
        slf4j  : '1.7.25',
        log4j  : '2.8.2',
        kotlin : '1.1.61',
        pi4j : '1.1'
]

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

// Project configuration

group = group
version = version

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    compile "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"

    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.2"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-rx1:0.19.2'

    compile "io.vertx:vertx-core:$versions.vertx.main"
    compile "io.vertx:vertx-web:$versions.vertx.main"
    compile "io.vertx:vertx-rx-java:$versions.vertx.main"
    compile "io.vertx:vertx-lang-kotlin:$versions.vertx.main"

    compile "com.fasterxml.jackson.core:jackson-annotations:$versions.vertx.jackson"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$versions.vertx.jackson"

    compile "com.pi4j:pi4j-core:$versions.pi4j"

    compile "org.slf4j:slf4j-api:$versions.slf4j"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$versions.log4j"
    compile "org.apache.logging.log4j:log4j-api:$versions.log4j"
    compile "org.apache.logging.log4j:log4j-core:$versions.log4j"
}

// ShadowJar

mainClassName = 'io.vertx.core.Launcher'
def mainVerticle = "io.wittekind.mehrnebel.machine.MainVerticle"

defaultTasks 'shadowJar'

shadowJar {
    classifier = 'fat'
    mainClassName = 'io.vertx.core.Launcher'
}

// Application

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

jar {
    manifest {
        attributes 'Main-Verticle': mainVerticle
    }
}

run {
    args = ["run", mainVerticle, "-conf", "src/main/resources/debug.json"]
}

defaultTasks 'build'